{"version":3,"sources":["../../src/models/Channel.model.js"],"names":["ChannelSchema","mongoose","Schema","name","type","String","trim","required","workspaceId","Types","ObjectId","ref","enum","default","member","userId","status","createdBy","timestamps","Channel","module","exports","model","createChannel","newChannel","callback","save"],"mappings":";;AAAA;;;;;;AAEA,MAAMA,gBAAgB,IAAIC,aAASC,MAAb,CAAoB;AACxCC,QAAM;AACJC,UAAMC,MADF;AAEJC,UAAM,IAFF;AAGJC,cAAU;AAHN,GADkC;AAMxCC,eAAa;AACXJ,UAAMH,aAASC,MAAT,CAAgBO,KAAhB,CAAsBC,QADjB;AAEXC,SAAK,YAFM;AAGXJ,cAAU;AAHC,GAN2B;AAWxCH,QAAM;AACJA,UAAMC,MADF;AAEJO,UAAM,CAAC,QAAD,EAAW,SAAX,CAFF;AAGJC,aAAS,QAHL;AAIJN,cAAU,IAJN;AAKJD,UAAM;AALF,GAXkC;AAkBxCQ,UAAQ,CAAC;AACPC,YAAQ;AACNX,YAAMH,aAASC,MAAT,CAAgBO,KAAhB,CAAsBC,QADtB;AAENC,WAAK;AACL;AAHM;AADD,GAAD,CAlBgC,EAwBpC;AACJK,UAAQ;AACNZ,UAAMC,MADA;AAENO,UAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAFA,EAEmB;AACzBC,aAAS,GAHH;AAINP,UAAM;AAJA,GAzBgC;;AAiCxCW,aAAW;AACTb,UAAMH,aAASC,MAAT,CAAgBO,KAAhB,CAAsBC,QADnB;AAETC,SAAK,OAFI;AAGTJ,cAAU;AAHD,GAjC6B,CAqCrC;AArCqC,CAApB,EAsCnB,EAAEW,YAAY,IAAd,EAtCmB,CAAtB;;AA0CA,IAAIC,UAAUC,OAAOC,OAAP,GAAiBpB,aAASqB,KAAT,CAAe,SAAf,EAA0BtB,aAA1B,CAA/B;AACAoB,OAAOC,OAAP,CAAeE,aAAf,GAA+B,UAAUC,UAAV,EAAsBC,QAAtB,EAAgC;AAC7DD,aAAWE,IAAX,CAAgBD,QAAhB;AACD,CAFD","file":"Channel.model.js","sourcesContent":["import mongoose from '../db';\n\nconst ChannelSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  workspaceId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Workspaces',\n    required: true,\n  },\n  type: {\n    type: String,\n    enum: ['global', \"private\"],\n    default: 'global',\n    required: true,\n    trim: true\n  },\n  member: [{\n    userId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: \"Users\",\n      // required: true,\n    }\n  }], //Array of Emails of Members\n  status: {\n    type: String,\n    enum: [\"0\", \"1\", \"2\"],   // 0 = inactive , 1 = active 2 = delete\n    default: \"1\",\n    trim: true\n  },\n\n\n  createdBy: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Users',\n    required: true,\n  }, //We store Email of Admins\n}, { timestamps: true });\n\n\n\nvar Channel = module.exports = mongoose.model('Channel', ChannelSchema);\nmodule.exports.createChannel = function (newChannel, callback) {\n  newChannel.save(callback);\n}"]}