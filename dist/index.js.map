{"version":3,"sources":["../src/index.js"],"names":["app","server","http","Server","io","use","PORT","process","env","listen","console","log","get","req","res","send","on","socket","id","msg"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;AACA;;;;AAWA,MAAMA,MAAM,wBAAZ;AACA,MAAMC,SAASC,eAAKC,MAAL,CAAYH,GAAZ,CAAf;AACA,MAAMI,KAAK,sBAASH,MAAT,CAAX;AACAD,IAAIK,GAAJ,CAAQ,qBAAR;;AAGA,MAAM,EAAEC,OAAO,IAAT,KAAkBC,QAAQC,GAAhC;AACAP,OAAOQ,MAAP,CAAcH,IAAd,EAAoB,MAAMI,QAAQC,GAAR,CAAa,0BAAyBL,IAAK,EAA3C,CAA1B,E,CAA0E;;AAE1EN,IAAIY,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,MAAIC,IAAJ,CAAS,SAAT;AACAL,UAAQC,GAAR,CAAYE,GAAZ;AACD,CAHD;;AAKAT,GAAGY,EAAH,CAAM,YAAN,EAAqBC,MAAD,IAAY;AAC9BP,UAAQC,GAAR,CAAY,iCAAZ,EAA+CM,OAAOC,EAAtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACAD,SAAOD,EAAP,CAAU,qBAAV,EAAkCG,GAAD,IAAS;AACxCT,YAAQC,GAAR,CAAY,+CAAZ,EAA6D,EAAEQ,GAAF,EAA7D;AACA,uCAAkBF,MAAlB,EAA0Bb,EAA1B,EAA8Be,GAA9B;AACD,GAHD;;AAKA;AACAF,SAAOD,EAAP,CAAU,eAAV,EAA4BG,GAAD,IAAS;AAClCT,YAAQC,GAAR,CAAY,yCAAZ,EAAuD,EAAEQ,GAAF,EAAvD;AACA,6BAAQF,MAAR,EAAgBb,EAAhB,EAAoBe,GAApB;AACD,GAHD;;AAMA;AACAF,SAAOD,EAAP,CAAU,WAAV,EAAwBG,GAAD,IAAS;AAC9BT,YAAQC,GAAR,CAAY,qCAAZ,EAAmD,EAAEQ,GAAF,EAAnD;AACA,8BAASF,MAAT,EAAiBb,EAAjB,EAAqBe,GAArB;AACD,GAHD;;AAKA;AACAF,SAAOD,EAAP,CAAU,YAAV,EAAyBG,GAAD,IAAS;AAC/BT,YAAQC,GAAR,CAAY,qCAAZ,EAAmDQ,GAAnD;AACA,+BAAUF,MAAV,EAAkBb,EAAlB,EAAsBe,GAAtB;AACD,GAHD;AAIA;AACAF,SAAOD,EAAP,CAAU,YAAV,EAAyBG,GAAD,IAAS;AAC/BT,YAAQC,GAAR,CAAY,sCAAZ,EAAoD,EAAEQ,GAAF,EAApD;AACA,+BAAUF,MAAV,EAAkBb,EAAlB,EAAsBe,GAAtB;AACD,GAHD;AAIA;AACAF,SAAOD,EAAP,CAAU,SAAV,EAAsBG,GAAD,IAAS;AAC5BT,YAAQC,GAAR,CAAY,mCAAZ,EAAiD,EAAEQ,GAAF,EAAjD;AACA,+BAAUF,MAAV,EAAkBb,EAAlB,EAAsBe,GAAtB;AACD,GAHD;;AAKAF,SAAOD,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BN,YAAQC,GAAR,CAAY,+CAAZ,EAA6DM,OAAOC,EAApE;AACD,GAFD;AAGD,CA/CD;;AAkDA;;;AAGA","file":"index.js","sourcesContent":["import express from \"express\";\nimport SocketIO from \"socket.io\"\nimport http from \"http\"\nimport cors from 'cors'\n\n\nimport './db';\nimport {\n  roomJoin,\n  roomJoin1,\n  onMessage,\n  onAuth,\n  getRoom,\n  workspaceRoomJoin,\n  roomLeave\n} from \"./controller\";\n\n\nconst app = express();\nconst server = http.Server(app);\nconst io = SocketIO(server);\napp.use(cors())\n\n\nconst { PORT = 8080 } = process.env;\nserver.listen(PORT, () => console.log(`Chat Listening on port ${PORT}`)); // eslint-disable-line no-console\n\napp.get(\"/\", (req, res) => {\n  res.send(\"Running\")\n  console.log(req)\n})\n\nio.on('connection', (socket) => {\n  console.log('--------------------->connected', socket.id);\n  //authenticate user \n\n  // socket.on('authentication', (userToken) => {\n  //     console.log('---------------------->authentication', { userToken })\n  //     onAuth(socket, io, userToken.token)\n  // })\n\n  // Workspace Join the room\n  socket.on(\"workspace_room_join\", (msg) => {\n    console.log('------------------------->workspace_room_join', { msg })\n    workspaceRoomJoin(socket, io, msg)\n  })\n\n  //get user room id\n  socket.on(\"get_user_room\", (msg) => {\n    console.log('------------------------->get_user_room', { msg })\n    getRoom(socket, io, msg)\n  })\n\n\n  // Join the room\n  socket.on(\"room_join\", (msg) => {\n    console.log('------------------------->room_join', { msg })\n    roomJoin(socket, io, msg)\n  })\n\n  // Join the room\n  socket.on(\"room_join1\", (msg) => {\n    console.log('------------------------->room_join', msg)\n    roomJoin1(socket, io, msg)\n  })\n  // Join the room leave\n  socket.on(\"room_leave\", (msg) => {\n    console.log('------------------------->room_leave', { msg })\n    roomLeave(socket, io, msg)\n  })\n  // on message send\n  socket.on(\"message\", (msg) => {\n    console.log('------------------------->message', { msg })\n    onMessage(socket, io, msg)\n  })\n\n  socket.on('disconnect', () => {\n    console.log('--------------------------->user disconnected', socket.id);\n  });\n});\n\n\n// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkYmVkY2NkZTU4ZDAwN2E0NWNjOTI4OCIsImVtYWlsIjoicmF2aS5zaW5naDIwOTFAZ21haWwuY29tIiwiaWF0IjoxNTc1ODc1NzQ0LCJleHAiOjE1NzY0ODA1NDR9.nCVudQYHur4yjQXrBhED3rzmmd1LbXnfu-3IQhBbUuU\n\n\n//  heroku logs --tail -a=weaverse-sockets --source app"]}