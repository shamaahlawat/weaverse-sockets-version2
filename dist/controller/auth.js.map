{"version":3,"sources":["../../src/controller/auth.js"],"names":["INVALID_TOKEN","onAuth","socket","io","token","sockets","emit","status","message","console","log","decoded","id","user","User","findOne","email","socket_token","err","error","name"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,MAAMA,gBAAgB,uBAAtB;;AAEO,MAAMC,0BAAS,OAAOC,MAAP,EAAeC,EAAf,EAAmBC,KAAnB,KAA6B;AAC/C,QAAI;AACA,YAAI,CAACA,KAAL,EAAY;AACRD,eAAGE,OAAH,CAAWC,IAAX,CAAgB,gBAAhB,EAAkC,EAAEC,QAAQ,KAAV,EAAiBC,SAASR,aAA1B,EAAlC;AACAS,oBAAQC,GAAR,CAAY,mDAAZ,EAAiE,EAAEH,QAAQ,KAAV,EAAiBC,SAASR,aAA1B,EAAjE;AACA;AACH;AACD,cAAMW,UAAU,MAAM,oBAAU,EAAEP,KAAF,EAAV,CAAtB;AACA,YAAI,CAACO,QAAQC,EAAb,EAAiB;AACbT,eAAGE,OAAH,CAAWC,IAAX,CAAgB,gBAAhB,EAAkC,EAAEC,QAAQ,KAAV,EAAiBC,SAASR,aAA1B,EAAlC;AACAS,oBAAQC,GAAR,CAAY,mDAAZ,EAAiE,EAAEH,QAAQ,KAAV,EAAiBC,SAASR,aAA1B,EAAjE;AACA;AACH;AACD,cAAMa,OAAO,MAAMC,aAAKC,OAAL,CAAa,EAAEC,OAAOL,QAAQK,KAAjB,EAAb,CAAnB;AACA,YAAI,CAACH,IAAL,EAAW;AACPV,eAAGE,OAAH,CAAWC,IAAX,CAAgB,gBAAhB,EAAkC,EAAEC,QAAQ,KAAV,EAAiBC,SAAS,gBAA1B,EAAlC;AACAC,oBAAQC,GAAR,CAAY,mDAAZ,EAAiE,EAAEH,QAAQ,KAAV,EAAiBC,SAAS,gBAA1B,EAAjE;AACA;AACH;AACDN,eAAOW,IAAP,GAAcA,IAAd;AACAV,WAAGE,OAAH,CAAWC,IAAX,CAAgB,gBAAhB,EAAkC,EAAEC,QAAQ,IAAV,EAAgBC,SAAS,YAAzB,EAAuCS,cAAcf,OAAOU,EAA5D,EAAlC;AACAH,gBAAQC,GAAR,CAAY,mDAAZ,EAAiE,EAAEH,QAAQ,IAAV,EAAgBC,SAAS,YAAzB,EAAuCS,cAAcf,OAAOU,EAA5D,EAAjE;AACA;AACH,KAtBD,CAsBE,OAAOM,GAAP,EAAY;AACV;AACAT,gBAAQU,KAAR,CAAcD,GAAd;AACA,YAAIA,IAAIE,IAAJ,KAAa,mBAAjB,EAAsC;AAClCjB,eAAGE,OAAH,CAAWC,IAAX,CAAgB,gBAAhB,EAAkC,EAAEC,QAAQ,KAAV,EAAiBC,SAAS,eAA1B,EAAlC;AACA;AACH,SAHD,MAGO,IAAIU,IAAIE,IAAJ,KAAa,mBAAjB,EAAsC;AACzCjB,eAAGE,OAAH,CAAWC,IAAX,CAAgB,gBAAhB,EAAkC,EAAEC,QAAQ,KAAV,EAAiBC,SAASR,aAA1B,EAAlC;AACA;AACH;AACDG,WAAGE,OAAH,CAAWC,IAAX,CAAgB,gBAAhB,EAAkC,EAAEC,QAAQ,KAAV,EAAiBC,SAAS,sBAA1B,EAAlC;AACA;AACH;AACJ,CApCM","file":"auth.js","sourcesContent":["import { decodeJWT } from '../utils/jwt';\nimport { User } from '../models';\n\nconst INVALID_TOKEN = 'Invalid/Missing token';\n\nexport const onAuth = async (socket, io, token) => {\n    try {\n        if (!token) {\n            io.sockets.emit('authentication', { status: false, message: INVALID_TOKEN });\n            console.log(\"---------------------> after emmit authentication\", { status: false, message: INVALID_TOKEN })\n            return\n        }\n        const decoded = await decodeJWT({ token });\n        if (!decoded.id) {\n            io.sockets.emit('authentication', { status: false, message: INVALID_TOKEN });\n            console.log(\"---------------------> after emmit authentication\", { status: false, message: INVALID_TOKEN })\n            return\n        }\n        const user = await User.findOne({ email: decoded.email });\n        if (!user) {\n            io.sockets.emit('authentication', { status: false, message: 'User not found' });\n            console.log(\"---------------------> after emmit authentication\", { status: false, message: 'User not found' })\n            return\n        }\n        socket.user = user\n        io.sockets.emit('authentication', { status: true, message: 'User found', socket_token: socket.id });\n        console.log(\"---------------------> after emmit authentication\", { status: true, message: 'User found', socket_token: socket.id })\n        return\n    } catch (err) {\n        // eslint-disable-next-line no-console\n        console.error(err);\n        if (err.name === 'TokenExpiredError') {\n            io.sockets.emit('authentication', { status: false, message: 'Token expired' });\n            return\n        } else if (err.name === 'JsonWebTokenError') {\n            io.sockets.emit('authentication', { status: false, message: INVALID_TOKEN });\n            return\n        }\n        io.sockets.emit('authentication', { status: false, message: \"Something went wrong\" });\n        return\n    }\n}"]}